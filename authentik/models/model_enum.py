# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2023.6.1
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class ModelEnum(str, Enum):
    """
    * `authentik_crypto.certificatekeypair` - Certificate-Key Pair * `authentik_events.event` - Event * `authentik_events.notificationtransport` - Notification Transport * `authentik_events.notification` - Notification * `authentik_events.notificationrule` - Notification Rule * `authentik_events.notificationwebhookmapping` - Webhook Mapping * `authentik_flows.flow` - Flow * `authentik_flows.flowstagebinding` - Flow Stage Binding * `authentik_outposts.dockerserviceconnection` - Docker Service-Connection * `authentik_outposts.kubernetesserviceconnection` - Kubernetes Service-Connection * `authentik_outposts.outpost` - outpost * `authentik_policies_dummy.dummypolicy` - Dummy Policy * `authentik_policies_event_matcher.eventmatcherpolicy` - Event Matcher Policy * `authentik_policies_expiry.passwordexpirypolicy` - Password Expiry Policy * `authentik_policies_expression.expressionpolicy` - Expression Policy * `authentik_policies_password.passwordpolicy` - Password Policy * `authentik_policies_reputation.reputationpolicy` - Reputation Policy * `authentik_policies_reputation.reputation` - reputation * `authentik_policies.policybinding` - Policy Binding * `authentik_providers_ldap.ldapprovider` - LDAP Provider * `authentik_providers_oauth2.scopemapping` - Scope Mapping * `authentik_providers_oauth2.oauth2provider` - OAuth2/OpenID Provider * `authentik_providers_oauth2.authorizationcode` - Authorization Code * `authentik_providers_oauth2.accesstoken` - OAuth2 Access Token * `authentik_providers_oauth2.refreshtoken` - OAuth2 Refresh Token * `authentik_providers_proxy.proxyprovider` - Proxy Provider * `authentik_providers_radius.radiusprovider` - Radius Provider * `authentik_providers_saml.samlprovider` - SAML Provider * `authentik_providers_saml.samlpropertymapping` - SAML Property Mapping * `authentik_providers_scim.scimprovider` - SCIM Provider * `authentik_providers_scim.scimmapping` - SCIM Mapping * `authentik_sources_ldap.ldapsource` - LDAP Source * `authentik_sources_ldap.ldappropertymapping` - LDAP Property Mapping * `authentik_sources_oauth.oauthsource` - OAuth Source * `authentik_sources_oauth.useroauthsourceconnection` - User OAuth Source Connection * `authentik_sources_plex.plexsource` - Plex Source * `authentik_sources_plex.plexsourceconnection` - User Plex Source Connection * `authentik_sources_saml.samlsource` - SAML Source * `authentik_sources_saml.usersamlsourceconnection` - User SAML Source Connection * `authentik_stages_authenticator_duo.authenticatorduostage` - Duo Authenticator Setup Stage * `authentik_stages_authenticator_duo.duodevice` - Duo Device * `authentik_stages_authenticator_sms.authenticatorsmsstage` - SMS Authenticator Setup Stage * `authentik_stages_authenticator_sms.smsdevice` - SMS Device * `authentik_stages_authenticator_static.authenticatorstaticstage` - Static Authenticator Stage * `authentik_stages_authenticator_totp.authenticatortotpstage` - TOTP Authenticator Setup Stage * `authentik_stages_authenticator_validate.authenticatorvalidatestage` - Authenticator Validation Stage * `authentik_stages_authenticator_webauthn.authenticatewebauthnstage` - WebAuthn Authenticator Setup Stage * `authentik_stages_authenticator_webauthn.webauthndevice` - WebAuthn Device * `authentik_stages_captcha.captchastage` - Captcha Stage * `authentik_stages_consent.consentstage` - Consent Stage * `authentik_stages_consent.userconsent` - User Consent * `authentik_stages_deny.denystage` - Deny Stage * `authentik_stages_dummy.dummystage` - Dummy Stage * `authentik_stages_email.emailstage` - Email Stage * `authentik_stages_identification.identificationstage` - Identification Stage * `authentik_stages_invitation.invitationstage` - Invitation Stage * `authentik_stages_invitation.invitation` - Invitation * `authentik_stages_password.passwordstage` - Password Stage * `authentik_stages_prompt.prompt` - Prompt * `authentik_stages_prompt.promptstage` - Prompt Stage * `authentik_stages_user_delete.userdeletestage` - User Delete Stage * `authentik_stages_user_login.userloginstage` - User Login Stage * `authentik_stages_user_logout.userlogoutstage` - User Logout Stage * `authentik_stages_user_write.userwritestage` - User Write Stage * `authentik_tenants.tenant` - Tenant * `authentik_blueprints.blueprintinstance` - Blueprint Instance * `authentik_core.group` - group * `authentik_core.user` - User * `authentik_core.application` - Application * `authentik_core.token` - Token
    """

    """
    allowed enum values
    """
    AUTHENTIK_CRYPTO_DOT_CERTIFICATEKEYPAIR = 'authentik_crypto.certificatekeypair'
    AUTHENTIK_EVENTS_DOT_EVENT = 'authentik_events.event'
    AUTHENTIK_EVENTS_DOT_NOTIFICATIONTRANSPORT = 'authentik_events.notificationtransport'
    AUTHENTIK_EVENTS_DOT_NOTIFICATION = 'authentik_events.notification'
    AUTHENTIK_EVENTS_DOT_NOTIFICATIONRULE = 'authentik_events.notificationrule'
    AUTHENTIK_EVENTS_DOT_NOTIFICATIONWEBHOOKMAPPING = 'authentik_events.notificationwebhookmapping'
    AUTHENTIK_FLOWS_DOT_FLOW = 'authentik_flows.flow'
    AUTHENTIK_FLOWS_DOT_FLOWSTAGEBINDING = 'authentik_flows.flowstagebinding'
    AUTHENTIK_OUTPOSTS_DOT_DOCKERSERVICECONNECTION = 'authentik_outposts.dockerserviceconnection'
    AUTHENTIK_OUTPOSTS_DOT_KUBERNETESSERVICECONNECTION = 'authentik_outposts.kubernetesserviceconnection'
    AUTHENTIK_OUTPOSTS_DOT_OUTPOST = 'authentik_outposts.outpost'
    AUTHENTIK_POLICIES_DUMMY_DOT_DUMMYPOLICY = 'authentik_policies_dummy.dummypolicy'
    AUTHENTIK_POLICIES_EVENT_MATCHER_DOT_EVENTMATCHERPOLICY = 'authentik_policies_event_matcher.eventmatcherpolicy'
    AUTHENTIK_POLICIES_EXPIRY_DOT_PASSWORDEXPIRYPOLICY = 'authentik_policies_expiry.passwordexpirypolicy'
    AUTHENTIK_POLICIES_EXPRESSION_DOT_EXPRESSIONPOLICY = 'authentik_policies_expression.expressionpolicy'
    AUTHENTIK_POLICIES_PASSWORD_DOT_PASSWORDPOLICY = 'authentik_policies_password.passwordpolicy'
    AUTHENTIK_POLICIES_REPUTATION_DOT_REPUTATIONPOLICY = 'authentik_policies_reputation.reputationpolicy'
    AUTHENTIK_POLICIES_REPUTATION_DOT_REPUTATION = 'authentik_policies_reputation.reputation'
    AUTHENTIK_POLICIES_DOT_POLICYBINDING = 'authentik_policies.policybinding'
    AUTHENTIK_PROVIDERS_LDAP_DOT_LDAPPROVIDER = 'authentik_providers_ldap.ldapprovider'
    AUTHENTIK_PROVIDERS_OAUTH2_DOT_SCOPEMAPPING = 'authentik_providers_oauth2.scopemapping'
    AUTHENTIK_PROVIDERS_OAUTH2_DOT_OAUTH2PROVIDER = 'authentik_providers_oauth2.oauth2provider'
    AUTHENTIK_PROVIDERS_OAUTH2_DOT_AUTHORIZATIONCODE = 'authentik_providers_oauth2.authorizationcode'
    AUTHENTIK_PROVIDERS_OAUTH2_DOT_ACCESSTOKEN = 'authentik_providers_oauth2.accesstoken'
    AUTHENTIK_PROVIDERS_OAUTH2_DOT_REFRESHTOKEN = 'authentik_providers_oauth2.refreshtoken'
    AUTHENTIK_PROVIDERS_PROXY_DOT_PROXYPROVIDER = 'authentik_providers_proxy.proxyprovider'
    AUTHENTIK_PROVIDERS_RADIUS_DOT_RADIUSPROVIDER = 'authentik_providers_radius.radiusprovider'
    AUTHENTIK_PROVIDERS_SAML_DOT_SAMLPROVIDER = 'authentik_providers_saml.samlprovider'
    AUTHENTIK_PROVIDERS_SAML_DOT_SAMLPROPERTYMAPPING = 'authentik_providers_saml.samlpropertymapping'
    AUTHENTIK_PROVIDERS_SCIM_DOT_SCIMPROVIDER = 'authentik_providers_scim.scimprovider'
    AUTHENTIK_PROVIDERS_SCIM_DOT_SCIMMAPPING = 'authentik_providers_scim.scimmapping'
    AUTHENTIK_SOURCES_LDAP_DOT_LDAPSOURCE = 'authentik_sources_ldap.ldapsource'
    AUTHENTIK_SOURCES_LDAP_DOT_LDAPPROPERTYMAPPING = 'authentik_sources_ldap.ldappropertymapping'
    AUTHENTIK_SOURCES_OAUTH_DOT_OAUTHSOURCE = 'authentik_sources_oauth.oauthsource'
    AUTHENTIK_SOURCES_OAUTH_DOT_USEROAUTHSOURCECONNECTION = 'authentik_sources_oauth.useroauthsourceconnection'
    AUTHENTIK_SOURCES_PLEX_DOT_PLEXSOURCE = 'authentik_sources_plex.plexsource'
    AUTHENTIK_SOURCES_PLEX_DOT_PLEXSOURCECONNECTION = 'authentik_sources_plex.plexsourceconnection'
    AUTHENTIK_SOURCES_SAML_DOT_SAMLSOURCE = 'authentik_sources_saml.samlsource'
    AUTHENTIK_SOURCES_SAML_DOT_USERSAMLSOURCECONNECTION = 'authentik_sources_saml.usersamlsourceconnection'
    AUTHENTIK_STAGES_AUTHENTICATOR_DUO_DOT_AUTHENTICATORDUOSTAGE = 'authentik_stages_authenticator_duo.authenticatorduostage'
    AUTHENTIK_STAGES_AUTHENTICATOR_DUO_DOT_DUODEVICE = 'authentik_stages_authenticator_duo.duodevice'
    AUTHENTIK_STAGES_AUTHENTICATOR_SMS_DOT_AUTHENTICATORSMSSTAGE = 'authentik_stages_authenticator_sms.authenticatorsmsstage'
    AUTHENTIK_STAGES_AUTHENTICATOR_SMS_DOT_SMSDEVICE = 'authentik_stages_authenticator_sms.smsdevice'
    AUTHENTIK_STAGES_AUTHENTICATOR_STATIC_DOT_AUTHENTICATORSTATICSTAGE = 'authentik_stages_authenticator_static.authenticatorstaticstage'
    AUTHENTIK_STAGES_AUTHENTICATOR_TOTP_DOT_AUTHENTICATORTOTPSTAGE = 'authentik_stages_authenticator_totp.authenticatortotpstage'
    AUTHENTIK_STAGES_AUTHENTICATOR_VALIDATE_DOT_AUTHENTICATORVALIDATESTAGE = 'authentik_stages_authenticator_validate.authenticatorvalidatestage'
    AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_DOT_AUTHENTICATEWEBAUTHNSTAGE = 'authentik_stages_authenticator_webauthn.authenticatewebauthnstage'
    AUTHENTIK_STAGES_AUTHENTICATOR_WEBAUTHN_DOT_WEBAUTHNDEVICE = 'authentik_stages_authenticator_webauthn.webauthndevice'
    AUTHENTIK_STAGES_CAPTCHA_DOT_CAPTCHASTAGE = 'authentik_stages_captcha.captchastage'
    AUTHENTIK_STAGES_CONSENT_DOT_CONSENTSTAGE = 'authentik_stages_consent.consentstage'
    AUTHENTIK_STAGES_CONSENT_DOT_USERCONSENT = 'authentik_stages_consent.userconsent'
    AUTHENTIK_STAGES_DENY_DOT_DENYSTAGE = 'authentik_stages_deny.denystage'
    AUTHENTIK_STAGES_DUMMY_DOT_DUMMYSTAGE = 'authentik_stages_dummy.dummystage'
    AUTHENTIK_STAGES_EMAIL_DOT_EMAILSTAGE = 'authentik_stages_email.emailstage'
    AUTHENTIK_STAGES_IDENTIFICATION_DOT_IDENTIFICATIONSTAGE = 'authentik_stages_identification.identificationstage'
    AUTHENTIK_STAGES_INVITATION_DOT_INVITATIONSTAGE = 'authentik_stages_invitation.invitationstage'
    AUTHENTIK_STAGES_INVITATION_DOT_INVITATION = 'authentik_stages_invitation.invitation'
    AUTHENTIK_STAGES_PASSWORD_DOT_PASSWORDSTAGE = 'authentik_stages_password.passwordstage'
    AUTHENTIK_STAGES_PROMPT_DOT_PROMPT = 'authentik_stages_prompt.prompt'
    AUTHENTIK_STAGES_PROMPT_DOT_PROMPTSTAGE = 'authentik_stages_prompt.promptstage'
    AUTHENTIK_STAGES_USER_DELETE_DOT_USERDELETESTAGE = 'authentik_stages_user_delete.userdeletestage'
    AUTHENTIK_STAGES_USER_LOGIN_DOT_USERLOGINSTAGE = 'authentik_stages_user_login.userloginstage'
    AUTHENTIK_STAGES_USER_LOGOUT_DOT_USERLOGOUTSTAGE = 'authentik_stages_user_logout.userlogoutstage'
    AUTHENTIK_STAGES_USER_WRITE_DOT_USERWRITESTAGE = 'authentik_stages_user_write.userwritestage'
    AUTHENTIK_TENANTS_DOT_TENANT = 'authentik_tenants.tenant'
    AUTHENTIK_BLUEPRINTS_DOT_BLUEPRINTINSTANCE = 'authentik_blueprints.blueprintinstance'
    AUTHENTIK_CORE_DOT_GROUP = 'authentik_core.group'
    AUTHENTIK_CORE_DOT_USER = 'authentik_core.user'
    AUTHENTIK_CORE_DOT_APPLICATION = 'authentik_core.application'
    AUTHENTIK_CORE_DOT_TOKEN = 'authentik_core.token'

    @classmethod
    def from_json(cls, json_str: str) -> ModelEnum:
        """Create an instance of ModelEnum from a JSON string"""
        return ModelEnum(json.loads(json_str))


